export default {
	/* ---- Settings ----- */
	metaCopySettings: "MetaCopy Settings",
	keyTitleSetting: "Key",
	keyTitleDesc: "The key which you want to copy the value",
	keyTitlePlaceholder: "key1, key2, key3,â€¦",
	linkCreatorHeader: "Link Creator",
	baseLink: "Base link",
	baseLinkDesc: "The base of the link",
	defaultBehavior: "Default behavior",
	defaultBehaviorDesc: "Choose between a metadata key, obsidian path & fixed folder for the link creator",
	fixedFolder: "Fixed Folder",
	categoryKey: "Metadata Key",
	obsidianPath: "Obsidian Path",
	keyLink: "Key link",
	keyLinkDesc: "The key to create as link",
	defaultValue: "Default value",
	defaultValueDesc: "If you want to active the link creation without the key set.",
	folderNote: "Folder note",
	folderNoteDesc: "If the file name = key link or parent folder, remove the file name in the link",
	disableMetaCopy: "Disable MetaCopy",
	disableMetaCopyDesc: "Disable Metacopy context menu with a frontmatter key.",
	disableMetaCopyDescURL: "Also disable the URL creation in command modal.",
	menuBehavior: "Menu behavior",
	menuBehaviorDesc: "Enable : require a configured key to enable the menu",
	keyMenu: "Key menu",
	keyMenuDesc: "The key used to disable/enable the metacopy file menu",
	useFrontMatterTitle: "Use frontmatter title",
	useFrontMatterTitleDesc: "Use frontmatter \"title\" field instead of the file name.",
	metadataMessage: (key: string): string => `Metadata key "${key}" copied to the clipboard.`,
	metadataMessageURL: "URL send to the clipboard."
};
